		MOV		R0,#velocidad							; puntero a unsigned int
		MOV		R1,#skip								; puntero a bool
		MOV		SP,	#pilaptr							; puntero a pila
		BL		oficina
		END
		
oficina
		STMFD	SP!,{R4,R5,R6,R7,R8,LR}				; push a la pila
		MOV		R4,#arreglo
		MOV		R5,R0
		MOV		R6,R1
		MOV		R7,#0									; indice
		MOV		R8,#16									;contador
		
for
		LDRB		R0,[R4,R7]								; R0 = arreglo[i]
		BL		mostrar
		LDR		R0,[R5,#0]								; R0 = v[0]
		BL		cout
		MOV		R0,R5									; R0 = v
		MOV		R1,R6									; R0 = skip
		BL		retardo
		LDRB		R0,[R6,#0]
		CMP		R6,#1									; if (skip == true) return;
		BEQ		return
		SUBS		R8,R8,#1
		ADD		R7,R7,#1
		BNE		for
		BEQ		return
		
mostrar
		MOV		PC,LR
		
cout
		MOV		PC,LR
		
retardo
		MOV		PC,LR
		
return
		LDMFD	SP!,{R4,R5,R6,R7,R8,LR}				; pop a la pila
		MOV		PC,LR
		
		
		
velocidad	DCD		4
skip		DCD		4
		
arreglo	DCB		0x0c,0x8c,0x4c,0x2c,0x1c,0x1a,0x19,0x18,0x18,0x19,0x1a,0x1c,0x2c,0x4c,0x8c,0x0c0
		
pila		FILL		40
pilaptr	DCD		1
